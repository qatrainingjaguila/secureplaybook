- hosts: nginx_docker
  become: true
  vars:
  - containers: 2
    container_name: docker_ubuntu
    container_image: ubuntu:18.04
    container_command: sleep 1d
  tasks:
    - name: "Installing nginx to live"
      apt:
        pkg:
        - nginx
        state: latest
        update_cache: true
    - name: "Starting NGINX"
      service:
        name: nginx
        state: started
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: setuptools
      apt:
        name: python-setuptools

    - name: pip
      apt:
        name: python-pip

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "{{ container_image }}"
        source: pull

    - name: Create default containers
      docker_container:
        name: "{{ container_name }}{{ item }}"
        image: "{{ container_image }}"
        command: "{{ container_command }}"
        state: present
      with_sequence: count={{ containers }}
  
    - name: Ensure the jenkins apt repository key is installed
      apt_key: 
        url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
      become: yes

    - name: ensure the repository is configured
      apt_repository: repo='deb https://pkg.jenkins.io/debian-stable binary/' state=present
      become: yes

    - name: ensure jenkins is installed
      apt: name=jenkins update_cache=yes
      become: yes

    - name: ensure jenkins is running
      service: name=jenkins state=started

    - name: Sleep for 30 seconds and continue with play
      wait_for: timeout=30

    - name: Get init password Jenkins
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      changed_when: false
      register: result

    - name: Print init password Jenkins
      debug:
        var: result.stdout
- hosts: docker_vm
  become: true
  vars:
  - containers: 2
    container_name: docker_ubuntu
    container_image: ubuntu:18.04
    container_command: sleep 1d
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
 
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
      
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
 
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
 
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
 
    - name: Install Docker Module for Python
      pip:
        name: docker
 
    - name: Pull default Docker image
      docker_image:
        name: "{{ container_image }}"
        source: pull
 
    - name: Create default containers
      docker_container:
        name: "{{ container_name }}{{ item }}"
        image: "{{ container_image }}"
        command: "{{ container_command }}"
        state: present
      with_sequence: count={{ containers }}
- hosts: 127.0.0.1
  connection: local
  become: true
  tasks:
   - name: "Installing nginx to localhost"
     apt:
       pkg:
       - nginx
       state: latest
       update_cache: true 
